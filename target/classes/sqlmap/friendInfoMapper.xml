<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="friendInfoMapper">
	<resultMap type="com.todo.api.userInfo.service.UserInfoVO" id="userInfoMap">
		<result property="userId"		column="USER_ID"/>
		<result property="password" 	column="PASSWORD"/>
		<result property="name" 		column="NAME"/>
		<result property="cellPhone" 	column="CELL_PHONE"/>
		<result property="birthDay" 	column="BIRTH_DAY"/>
		<result property="registDate" 	column="REGIST_DATE"/>
		<result property="changeDate" 	column="CHANGE_DATE"/>
		<result property="friendShowAt" column="FRIEND_SHOW_AT"/>
		<result property="userFrindAt" 	column="USER_FRIEND_AT"/>
	</resultMap>
	
	<resultMap type="com.todo.api.userFriends.service.FriendVO" id="friendMap">
		<result property="seqSn"		column="SEQ_SN"/>
		<result property="userId" 		column="USER_ID"/>
		<result property="friendId" 	column="FRIEND_ID"/>
		<result property="stateAt" 		column="STATE_AT"/>
	</resultMap>	

	<select id="friendInfoMapper.selectFriendList" parameterType="friendVO" resultMap="friendMap">
		/*
			id = friendInfoMapper.selectFriendList
			친구목록 조회
		*/
		WITH A AS(      
					SELECT USER_ID FRIEND_ID, FRIEND_ID USER_ID
					FROM USER_FRIEND
					WHERE FRIEND_ID = #{userId}
				UNION  
					SELECT FRIEND_ID, USER_ID
					FROM USER_FRIEND
					WHERE USER_ID = #{userId}
		)
		SELECT USER_ID,FRIEND_ID 
		FROM A		
	</select>

	<insert id="friendInfoMapper.userFriendReigst" parameterType="friendVO">
		/*
			id = friendInfoMapper.userFriendReigst
			친구요청 
		*/
		<selectKey  keyProperty="seqSn" resultType="integer" order="BEFORE">
			SELECT 	NVL(MAX(SEQ_SN),0)+1 
			FROM 	USER_FRIEND_HISTORY
			WHERE USER_ID = #{userId} AND FRIEND_ID = #{friendId}
		</selectKey>
		
		INSERT INTO USER_FRIEND_HISTORY (
											SEQ_SN,
											USER_ID,
											<if test='!"W".equals(stateAt)'>
												STATE_AT,
											</if>
											FRIEND_ID,
											REGIST_DATE
										)
		VALUES(
				#{seqSn}, 
				#{userId},
				<if test='!"W".equals(stateAt)'>
				 	#{stateAt},
		 		</if>
				#{friendId}, 
			 	SYSDATE()
			)										
	</insert>

	<select id="friendInfoMapper.selectFriendRequestAtList" parameterType="friendVO" resultMap="friendMap">
		/*
			id = friendInfoMapper.selectFriendRegistList
			친구요청 여부에 따른 리스트 조회
			friendRegistAt : AA (친구한 목록)
			friendRegistAt : BB (친구요청 받은 목록)
		*/
		SELECT 	A.SEQ_SN, 
				A.USER_ID, 
				A.FRIEND_ID,
				CASE 
					WHEN A.STATE_AT = 'W' THEN "요청중"
				END STATE_AT
		FROM USER_FRIEND_HISTORY A
			INNER JOIN(
						SELECT MAX(SEQ_SN) AS SEQ_SN, USER_ID, FRIEND_ID
						FROM USER_FRIEND_HISTORY
						GROUP BY USER_ID,FRIEND_ID
			) B
			ON(
				A.SEQ_SN = B.SEQ_SN
				AND A.USER_ID = B.USER_ID
				AND A.FRIEND_ID = B.FRIEND_ID)
		WHERE 		A.STATE_AT = 'W'	
				<if test='"AA".equals(friendRegistAt)'>
					AND	A.USER_ID = #{userId}
				</if>
				<if test='"BB".equals(friendRegistAt)'>
					AND A.FRIEND_ID = #{userId}
				</if>
	</select>
	
	
	<insert id="friendInfoMapper.insertFriend" parameterType="friendVO">
		INSERT INTO USER_FRIEND	(
									USER_ID,
									FRIEND_ID,
									REGIST_DATE 
		)
		VALUES(
				#{userId},
				#{friendId},
				SYSDATE()
		)
	</insert>
	
</mapper>